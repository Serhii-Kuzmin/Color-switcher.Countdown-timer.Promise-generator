{"mappings":"mkBAAA,IAAAA,EAAAC,EAAA,SAGAC,SAASC,iBAAiB,oBAAoB,WAqB5C,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IA7BMJ,SAASY,cAAc,SAE/BX,iBAAiB,UAAU,SAAUY,GACxCA,EAAMC,iBAMN,IAJA,IAAMC,EAAaC,OAAOC,KAAKC,SAASd,MAAMe,OACxCC,EAAOJ,OAAOC,KAAKC,SAASE,KAAKD,OACjCE,EAASL,OAAOC,KAAKC,SAASG,OAAOF,OAElCG,EAAI,EAAGA,GAAKD,EAAQC,IAC3BpB,EAAcoB,EAAGP,GAAcO,EAAI,GAAKF,GACrCG,MAAK,SAAAC,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MACjBqB,EAAA3B,GAAS4B,OAAOC,QAAQ,uBAAwCC,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,M,IAEvEyB,OAAM,SAAAL,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MAClBqB,EAAA3B,GAAS4B,OAAOI,QAAQ,sBAAqCF,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const form = document.querySelector('.form');\n\n  form.addEventListener('submit', function (event) {\n    event.preventDefault();\n\n    const firstDelay = Number(this.elements.delay.value);\n    const step = Number(this.elements.step.value);\n    const amount = Number(this.elements.amount.value);\n\n    for (let i = 1; i <= amount; i++) {\n      createPromise(i, firstDelay + (i - 1) * step)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n    }\n  });\n\n  function createPromise(position, delay) {\n    return new Promise((resolve, reject) => {\n      const shouldResolve = Math.random() > 0.3;\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve({ position, delay });\n        } else {\n          reject({ position, delay });\n        }\n      }, delay);\n    });\n  }\n});\n"],"names":["$6JpON","parcelRequire","document","addEventListener","createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","querySelector","event","preventDefault","firstDelay","Number","this","elements","value","step","amount","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.b8e7f9db.js.map"}